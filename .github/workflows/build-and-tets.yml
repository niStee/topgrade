name: Build and test
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta, nightly]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Install grcov
        run: cargo install grcov
      - name: Add llvm-tools-preview
        run: rustup component add llvm-tools-preview
      - name: Build and test
        run: |
          export RUSTFLAGS="-Cinstrument-coverage"
          cargo build --verbose
          LLVM_PROFILE_FILE="%p-%m.profraw" cargo test --verbose --jobs ${{ matrix.os }}
      - name: Generate lcov.info
        run: |
          ./grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
          - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v4
          with:
            file: lcov.info